import express from "express";
import { PrismaClient } from "@prisma/client";
import { StreakService } from "../services/streakService";

const router = express.Router();
const prisma = new PrismaClient();

// Rota para buscar ou criar um usu√°rio da newsletter pelo e-mail
router.get("/subscribe", async (req, res) => {
  try {
    const { email, id } = req.query;

    if (!email) {
       res.status(400).json({ error: "O campo 'email' √© obrigat√≥rio." });
       return
    }

    console.log(`üîÑ Buscando informa√ß√µes do usu√°rio no banco: ${email}`);

    // Buscando o usu√°rio pelo e-mail no banco de dados
    let user = await prisma.user.findUnique({
      where: { email },
    });

    // Se o usu√°rio n√£o existir, cria um novo
    if (!user) {
      console.log("Usu√°rio n√£o encontrado, criando novo usu√°rio...");
      user = await prisma.user.create({
        data: { id: String(id), email: String(email) }, // Usando o ID da query
      });
    }

    try {
      await StreakService.updateUserStreak(user.id);
    } catch (streakError) {
      console.error("‚ö†Ô∏è Erro ao atualizar o streak:", streakError);
      // O erro no streak n√£o impede a resposta ao usu√°rio
    }

    // Retornando os dados reais do banco
    res.json({
      data: {
        id: user.id,
        email: user.email,
        created_at: user.createdAt,
      },
    });
  } catch (error: any) {
    console.error("‚ùå Erro ao buscar/criar o usu√°rio no banco:", error.message);
    res.status(500).json({ error: "Erro interno do servidor." });
  }
});

export default router;